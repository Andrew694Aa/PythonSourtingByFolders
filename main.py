import customtkinter as ctk
from tkinter import filedialog, messagebox
import os
import shutil
import logging

# ---------- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ----------
logging.basicConfig(filename="sorter_errors.log", level=logging.ERROR, format="%(asctime)s - %(levelname)s - %(message)s")

# ---------- CustomTkinter ----------
ctk.set_appearance_mode("dark")
ctk.set_default_color_theme("dark-blue")

app = ctk.CTk()
app.title("Sorting by folders")
app.geometry("800x600")

# ---------- –ò–∫–æ–Ω–∫–∞ ----------
icon_path = "Sorting_by_folders_Icon.ico"
if os.path.exists(icon_path):
    try:
        app.iconbitmap(icon_path)
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É: {e}")

# ---------- –ö–æ–Ω—Ñ–∏–≥ ----------
def create_default_config(file_path="config.cfg"):
    if not os.path.exists(file_path):
        default_content = """# –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ = –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
.jpg = Images
.png = Images
.mp4 = Videos
.mp3 = Music
.pdf = Documents
.docx = Documents
.zip = Archives
.rar = Archives
.exe = Software
.=Other
"""
        with open(file_path, "w", encoding="utf-8") as f:
            f.write(default_content)

def load_config(file_path="config.cfg"):
    create_default_config(file_path)
    ext_map = {}
    with open(file_path, "r", encoding="utf-8") as f:
        for line in f:
            if "=" in line and not line.strip().startswith("#"):
                ext, folder = line.strip().split("=")
                ext_map[ext.strip().lower()] = folder.strip()
    return ext_map

# ---------- –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–∞–ø–∫–∏ ----------
def open_last_sorted_folder():
    if hasattr(open_last_sorted_folder, "last_path") and os.path.exists(open_last_sorted_folder.last_path):
        os.startfile(open_last_sorted_folder.last_path)
    else:
        messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "–ü–∞–ø–∫–∞ –µ—â—ë –Ω–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∞—Å—å.")

# ---------- –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ config.cfg ----------
def show_config():
    create_default_config()
    config_window = ctk.CTkToplevel(app)
    config_window.title("‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å config.cfg")
    config_window.geometry("700x500")

    text_box = ctk.CTkTextbox(config_window)
    text_box.pack(fill="both", expand=True, padx=10, pady=(10, 5))

    with open("config.cfg", "r", encoding="utf-8") as f:
        text_box.insert("0.0", f.read())

    def save_and_close():
        try:
            with open("config.cfg", "w", encoding="utf-8") as f:
                f.write(text_box.get("0.0", "end-1c"))
            messagebox.showinfo("–£—Å–ø–µ—Ö", "–§–∞–π–ª config.cfg —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
            config_window.destroy()
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ config.cfg: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª: {e}")

    ctk.CTkButton(config_window, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=save_and_close).pack(pady=5)
    ctk.CTkButton(config_window, text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", command=config_window.destroy).pack(pady=5)

# ---------- –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ ----------
def sort_files(folder=None):
    if not folder:
        folder = filedialog.askdirectory(title="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏")
    if not folder:
        return

    status_label.configure(text="üîÑ –ò–¥—ë—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞...")
    app.update_idletasks()

    rules = load_config()
    try:
        files = os.listdir(folder)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø–∞–ø–∫–∏: {e}")
        return

    for file in files:
        full_path = os.path.join(folder, file)
        if not os.path.isfile(full_path):
            continue

        ext = os.path.splitext(file)[1].lower()
        dest_folder = rules.get(ext, rules.get(".", "Other"))
        dest_path = os.path.join(folder, dest_folder)
        os.makedirs(dest_path, exist_ok=True)

        try:
            shutil.move(full_path, os.path.join(dest_path, file))
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ {file}: {e}")

    open_last_sorted_folder.last_path = folder
    messagebox.showinfo("–ì–æ—Ç–æ–≤–æ", "‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    status_label.configure(text="‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

# ---------- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ----------
frame = ctk.CTkFrame(app, corner_radius=12)
frame.pack(padx=20, pady=10, fill="x")

ctk.CTkLabel(frame, text="üìÅ Sorting by folders", font=ctk.CTkFont(size=24, weight="bold")).pack(pady=20)

ctk.CTkButton(frame, text="üìÇ –í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", height=40, width=300, fg_color="#5cb85c", hover_color="#4cae4c", command=sort_files).pack(pady=5)
ctk.CTkButton(frame, text="‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å config.cfg", height=32, width=300, command=show_config).pack(pady=5)
ctk.CTkButton(frame, text="üìÇ –û—Ç–∫—Ä—ã—Ç—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–∞–ø–∫—É", height=32, width=300, command=open_last_sorted_folder).pack(pady=5)

status_label = ctk.CTkLabel(frame, text="‚è≥ –ì–æ—Ç–æ–≤ –∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ", text_color="gray")
status_label.pack(pady=20)

# ---------- –ó–∞–ø—É—Å–∫ ----------
app.mainloop()
